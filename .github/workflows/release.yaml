name: Release
on:
    workflow_dispatch:
    push:
        branches:
            - main
            - fix-release-workflow

concurrency: release
jobs:
    release:
        name: Release
        runs-on: ubuntu-22.04
        steps:
            ###################################################
            #
            # Prepare
            #
            ###################################################

            - name: (PREPARE) Checkout Repository
              uses: actions/checkout@v4
              with:
                  lfs: true
                  fetch-depth: 0

            - name: (PREPARE) Setup Git
              run: |
                  git config --global user.name "${GITHUB_ACTOR}"
                  git config --global user.email "${GITHUB_ACTOR}@users.noreply.${GITHUB_DOMAIN:-"github.com"}"

            - name: (PREPARE) Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 22.0.0
                  cache: yarn

            - name: (PREPARE) Install Dependencies
              run: yarn

            ###################################################
            #
            # Test
            #
            ###################################################

            - name: (TEST) Check ESLint
              run: yarn lint:check

            - name: (TEST) Check Prettier
              run: yarn style:check

            - name: (TEST) Check Dependencies
              run: yarn license:check

            ###################################################
            #
            # Distribution
            #
            ###################################################

            - name: (DIST) Setup Packaging Cache
              uses: actions/cache@v4
              with:
                  path: ~/.pkg-cache
                  key: pkg

            - name: (DIST) Build Project
              run: yarn dist:build

            - name: (DIST) Package Binaries
              run: yarn dist:package

            - name: (DIST) Compress Binaries
              run: yarn dist:compress

            ###################################################
            #
            # Release
            #
            ###################################################

            - name: (RELEASE) Delete Latest Release
              run: yarn license:generate

            - name: (RELEASE) Delete Latest Release
              run: gh release delete latest --cleanup-tag --yes || true
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: (RELEASE) Delete Latest Tag (Local)
              run: git tag --delete latest || true

            - name: (RELEASE) Create Latest Release
              run: gh release create latest --target ${GITHUB_SHA} --latest -t "Latest Release" -n "This is the latest release of this project" ./dist/*
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            ###################################################
            #
            # Docs
            #
            ###################################################

            - name: (RELEASE) Build docs
              run: yarn docs:build

            - name: (DOCS) Deploy Docs
              uses: peaceiris/actions-gh-pages@v4
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: docs/.vitepress/dist

            - name: (RELEASE) Archive docs
              run: tar -czvf docs.tar.gz -C docs/.vitepress/dist .

            - name: (RELEASE) Upload docs to release
              run: gh release upload latest docs.tar.gz
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
